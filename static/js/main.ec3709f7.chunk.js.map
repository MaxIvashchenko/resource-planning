{"version":3,"sources":["images/plus.svg","components/System/DatePickerHeader/ShowMDaysLine.jsx","components/System/DatePickerHeader/ButtonsSwitcher.jsx","components/System/DatePickerHeader/ShowMonth.jsx","components/System/DatePickerHeader/ShowMonthLine.jsx","components/System/DatePickerHeader/DatePickerHeader.jsx","components/System/AbsoluteSmooth/Lines.jsx","components/System/AbsoluteSmooth/DepartmentTitle.jsx","components/System/AbsoluteSmooth/Piece.jsx","components/System/PopUp/PopUp.jsx","components/lab/givePositionY.js","components/System/AbsoluteSmooth/AbsoluteSmooth.jsx","components/System/AbsoluteSmooth/CalculateData.jsx","components/System/System.jsx","App.js","serviceWorker.js","index.js","images/buttonLeft.svg","images/buttonRight.svg","images/delete.svg","images/edit.svg"],"names":["module","exports","ShowMDaysLine","day","daysNumber","className","style","width","date","weekDay","ButtonsSwitcher","props","nameOfClass","handler","onClick","src","btnL","alt","children","btnR","ShowMonth","i","month","sum","withSize","monthsView","getRowWidth","size","useEffect","monthMap","map","key","DatePickerHeader","getDaysInRow","useState","setDaysNumber","days","setDays","setmonthsView","Date","getTime","startDate","setStartDate","setDate","getDate","endDate","setEndDate","daysLeft","Math","round","counter","moment","add","format","year","push","id","projects","somOfDays","reduce","acc","el","Object","keys","num","selected","onChange","data","selectsStart","dateFormat","selectsEnd","minDate","isTrue","newStartDate","newEndDate","subtract","Lines","index","cellWidth","indexs","console","log","height","version","x1","y1","stroke","fill","strokeDasharray","strokeWidth","DepartmentTitle","departament","departamentID","toggler","name","departamentName","show","arrowIcon","Piece","piece","pieceIndex","rowIndex","deleteProject","setSomeData","board","getInnerProjectOffset","blockWidth","ourPosition","useForceUpdate","positionX","document","querySelectorAll","X","setX","Y","setY","setthisId","showPopup","setshowPopup","isEditing","setIsEditing","overflow","position","left","duration","top","positionY","type","e","piec","clientX","clientY","someFunc","onMouseDown","nativeEvent","offsetX","title","editIcon","closer","deleteIcon","PopUp","handlerAddPopUp","workerInfo","addingInfo","setTitle","cross","required","event","target","value","givePositionY","someArray","departamentIndex","workers","worker","proj","length","forEach","v","maxPos","sort","a","b","blockHeight","AbsoluteSmooth","onDrop","bind","shouldAcceptDrop","onDragEnter","onDragEnd","onDragLeave","onDragStart","handleMouseMove","onDropReady","state","startDrag","dayOffsetLeft","daysRowWidth","x","showAddPopUp","innerProjectOffset","nextProps","this","setState","newArray","bol","workerId","row","surname","getWorkersId","plus","rowWidth","onMouseMove","behaviour","result","_","payload","getChildPayload","animationDuration","getElementById","offsetLeft","colIndex","dropResult","addedIndex","removedIndex","obj","assign","splice","forceUpdate","col","Component","defaultProps","department","projStart","CalculateData","daysInRow","element","resizer","currentResizer","addEventListener","classList","remove","arr","System","reverse","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ec3709f7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/plus.c767ee98.svg\";","import React from 'react'\n\nexport default function ShowMDaysLine({ day, daysNumber }) {\n    return (\n        <div\n            className=\"day\"\n            style={{ width: `${100 / daysNumber}%` }}>\n            <p>{day.date}</p>\n            <p>{day.weekDay}</p>\n        </div>\n    )\n}\n","import React from 'react'\nimport btnR from '../../../images/buttonRight.svg'\nimport btnL from '../../../images/buttonLeft.svg'\n\n\nfunction ButtonsSwitcher(props) {\n    const { nameOfClass, handler } = props\n\n    return (\n        <div className={nameOfClass}>\n            <button onClick={() => handler(false)} ><img src={btnL} alt=\"button-icon\" /></button>\n            {props.children}\n            <button onClick={() => handler(true)} ><img src={btnR} alt=\"button-icon\" /></button>\n        </div>\n\n    )\n\n}\nexport default ButtonsSwitcher\n\n","import React from 'react'\n\n\nfunction ShowMonth ({ i, month, daysNumber   }) {\n\n\n    return (\n        <div\n            className={i === 0 ? \"month\" : \"month borderLine\"}\n            style={{ width: `${100 / daysNumber * month.sum}%` }}>\n            {month.month}\n        </div>\n    )\n}\n\nexport default ShowMonth","import React, { useEffect } from 'react'\nimport { withSize } from 'react-sizeme'\nimport ShowMonth from './ShowMonth';\n\nfunction ShowMonthLine({ monthsView, getRowWidth, daysNumber, size }) {\n    useEffect(() => {\n        getRowWidth(size.width)\n    }, [getRowWidth, size.width])\n\n    const monthMap = monthsView.map((month, i) => {\n        return (\n            <ShowMonth\n                i={i}\n                key={\"month-\" + month.month + \"-\" + i}\n                month={month}\n                daysNumber={daysNumber}\n            />\n        )\n    })\n\n    return (\n        <div className=\"months\">\n            {monthMap}\n        </div>\n    )\n}\n\nexport default withSize()(ShowMonthLine)\n\n\n","import React, { useState, useEffect } from 'react'\nimport moment from 'moment';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nimport ShowMDaysLine from './ShowMDaysLine';\nimport ButtonsSwitcher from './ButtonsSwitcher';\n\nimport ShowMonthLine from './ShowMonthLine';\n\n\nconst calendarDay = 24 * 60 * 60 * 1000;\n\nfunction DatePickerHeader({ getDaysInRow, getRowWidth }) {\n    const [daysNumber, setDaysNumber] = useState(5);\n    const [days, setDays] = useState([]);\n    const [monthsView, setmonthsView] = useState([]);\n    const [startDate, setStartDate] = useState(new Date().getTime());\n    const [endDate, setEndDate] = useState(new Date().setDate(new Date().getDate() + daysNumber));\n\n    useEffect(() => {\n        const daysLeft = Math.round((endDate - startDate) / calendarDay);\n        const counter = daysLeft > 21 ? 21 : daysLeft;\n        counter !== 0 && setDaysNumber(counter)\n        const days = []\n\n        for (let i = 0; i < counter + 1; i++) {\n            const weekDay = moment(startDate).add(1 * i, 'day').format('dd');\n            const date = moment(startDate).add(1 * i, 'day').date();\n            const month = moment(startDate).add(1 * i, 'day').format('MMMM')\n            const year = moment(startDate).add(1 * i, 'day').year()\n            const projects = {}\n\n            days.push({ id: weekDay + \"-\" + date + \"-\" + month, weekDay, date, month, year, projects })\n        }\n\n        const somOfDays = days.reduce((acc, el) => {\n            acc[el.month] = (acc[el.month] || 0) + 1;\n            return acc\n        }, {});\n\n        const monthsView = Object.keys(somOfDays).map(function (num) {\n            return { month: num, sum: somOfDays[num] };\n        });\n\n        setDays(days)\n        setmonthsView(monthsView)\n        getDaysInRow(days)\n    }, [startDate, endDate, daysNumber, getDaysInRow])\n\n    const monthHandler = (isTrue) => {\n        let newStartDate, newEndDate;\n        if (isTrue) {\n            newStartDate = moment(startDate).add(1, 'month').format('x')\n            newEndDate = moment(endDate).add(1, 'month').format('x')\n\n        } else {\n            newStartDate = moment(startDate).subtract(1, 'month').format('x')\n            newEndDate = moment(endDate).subtract(1, 'month').format('x')\n        }\n\n        setStartDate(+newStartDate)\n        setEndDate(+newEndDate)\n    }\n\n    const dayHandler = (isTrue) => {\n        if (isTrue) {\n            setStartDate(startDate + calendarDay)\n            setEndDate(endDate + calendarDay)\n        } else {\n            setStartDate(startDate - calendarDay)\n            setEndDate(endDate - calendarDay)\n        }\n    }\n    const clear = () => {\n        setStartDate(new Date().getTime())\n        setEndDate(new Date().setDate(new Date().getDate() + 14))\n    }\n    // console.log('rerender')\n    return (\n        <div className=\"DatePickerHeader container-fluid\">\n            <div className=\"picker\">\n                <div className=\"calendar\">\n                    <div className=\"dates\">\n                        <DatePicker\n                            selected={startDate}\n                            onChange={data => setStartDate(data.getTime())}\n                            selectsStart\n                            startDate={startDate}\n                            endDate={endDate}\n                            dateFormat=\"MMMM d, yyyy\"\n                        />\n                        <DatePicker\n                            selected={endDate > startDate ? endDate : startDate}\n                            onChange={data => setEndDate(data.getTime())}\n                            selectsEnd\n                            startDate={startDate}\n                            endDate={endDate}\n                            minDate={startDate}\n                            dateFormat=\"MMMM d, yyyy\"\n                        />\n                        <button id=\"clearButton\" onClick={() => clear()}>Clear</button>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"datesShow\">\n\n                <ButtonsSwitcher handler={monthHandler} nameOfClass={\"months\"}>\n                    <ShowMonthLine monthsView={monthsView} getRowWidth={getRowWidth} daysNumber={daysNumber} />\n                </ButtonsSwitcher>\n\n                <ButtonsSwitcher handler={dayHandler} nameOfClass={\"days\"}>\n                    {days.map(day =>\n                        <ShowMDaysLine\n                            key={\"headerDate-\" + day.date + \"-\" + day.i}\n                            day={day}\n                            daysNumber={daysNumber}\n                        />\n                    )}\n                </ButtonsSwitcher>\n\n            </div>\n        </div>\n\n    )\n}\n\n\nexport default DatePickerHeader\n","import React from 'react'\n\nexport default function Lines({ index, cellWidth }) {\n    const indexs = index + 1\n\n    console.log('rerender Lines' )\n    return (\n        <div  className='svgLines' style={{ 'right': `${cellWidth * indexs+20}px` }}>\n\n            <svg   width='1px' height=\"100%\" version=\"1.1\" >\n\n                <line x1=\"0\" y1=\"100%\" stroke=\"black\" fill=\"transparent\" strokeDasharray=\"4\" strokeWidth=\"1\" />\n                <line x1=\"100%\" y1=\"100%\" stroke=\"black\" fill=\"transparent\" strokeDasharray=\"4\" strokeWidth=\"1\" />\n\n\n            </svg>\n        </div>\n    )\n\n}\n","import React from 'react'\nimport arrowIcon from '../../../images/buttonLeft.svg'\n\nexport default function DepartmentTitle({ departament, departamentID, toggler }) {\n    // console.log('rerender DepartmentTitle')\n    return (\n        <div className=\"departmentTitle\" key={\"key-\"+departament.name+\"-\"+departamentID}>\n            <h5>{departament.departamentName}</h5>\n            <button\n                onClick={() =>  toggler(departamentID)}\n                className=\"departmentBtn\"><img className={departament.show ? \"show\" : \"hide\"} src={arrowIcon} alt=\"arrow icon\" /></button>\n        </div>\n    )\n}\n","import React, { useEffect, useState } from 'react'\nimport { Draggable, dropHandlers } from 'react-smooth-dnd';\nimport useForceUpdate from 'use-force-update';\nimport arrowIcon from '../../../images/plus.svg'\nimport deleteIcon from '../../../images/delete.svg'\nimport editIcon from '../../../images/edit.svg'\nimport cross from '../../../images/plus.svg'\n\n\nexport default function Piece(props) {\n    const { piece,\n        cellWidth,\n        pieceIndex,\n        rowIndex,\n        departamentID,\n        setSomeData,\n        board,\n        deleteProject,\n        getInnerProjectOffset } = props\n\n    const blockWidth = cellWidth || 1\n    const forceUpdate = useForceUpdate();\n\n    let ourPosition = piece.positionX * blockWidth\n\n    const element = document.querySelectorAll('.handlers');\n    const resizer = document.querySelectorAll('.resizer')\n\n    const [X, setX] = useState(0)\n    const [Y, setY] = useState()\n    const [thisId, setthisId] = useState()\n    const [showPopup, setshowPopup] = useState(false)\n    const [isEditing, setIsEditing] = useState(false)\n\n    const someFunc = (e, piec) => {\n        setthisId('')\n        setX(e.clientX)\n        setY(e.clientY)\n        setthisId(piec)\n    }\n    const closer = (pieceIndex, rowIndex, departamentID) => {\n        deleteProject(pieceIndex, rowIndex, departamentID)\n        setshowPopup(false)\n    }\n\n    if (piece) {\n        // console.log(thisId)\n\n        return (\n\n            <Draggable\n                id={`${piece.id}-dragger`}\n                className=\"handlers\"\n\n                style={{ overflow: \"visible\", position: 'absolute', left: ourPosition, width: blockWidth * piece.duration, top: `${34 * piece.positionY}px` }}>\n                <div className={` ${piece.type}`} >\n                    <button onClick={(e) => someFunc(e, piece.id)}>\n                        <div onMouseDown={(e) => getInnerProjectOffset(e.nativeEvent.offsetX)} onClick={() => setshowPopup(!showPopup)} className=\"project\">{piece.title}</div>\n                        <div className=\"resizer leftHandler\" />\n                        <div className=\"resizer rightHandler\" />\n                    </button>\n                    {showPopup &&\n                        <div style={{ top: Y + 20, left: X - 150 }} className=\"editPopup\">\n\n                            <div className=\"buttonWrapper\">\n                                <div className={`cyrcleStyle popup-${piece.type}`}></div>\n                                <button className=\"btnEdit\" onClick={() => setIsEditing(true)}>\n                                    <img src={editIcon} alt=\"edit-icon\" />\n                                </button>\n                                <button className=\"btnDelete\" onClick={() => closer(pieceIndex, rowIndex, departamentID)}>\n                                    <img src={deleteIcon} alt=\"delete-icon\" />\n                                </button>\n                                <button className=\"btnClose\" onClick={() => setshowPopup(false)}>\n                                    <img className=\"arrowIcon\" src={arrowIcon} alt=\"close-icon\" />\n                                </button>\n                            </div>\n                            {isEditing ?\n                                <div className=\"popupTitle\">{piece.title}</div>\n                                :\n                                // <div className=\"PopUp\">\n                                //     <div className=\"popUpForm\">\n\n                                //         <div className=\"title\">\n                                //             <h1>Event  </h1>\n                                //             <img onClick={() => setIsEditing(false)} src={cross} alt=\"cross-icon\" />\n                                //         </div>\n                                //         <p>Enter Title:</p>\n\n                                //         <textarea\n                                //             required\n                                //             className=\"textarea\"\n                                //             type='text'\n                                //             // onChange={myChangeHandler}\n                                //         />\n                                //         <div className=\"buttons\">\n                                //             <button onClick={() => console.log()} className=\"submitBtn\">submit</button>\n                                //             <button onClick={() => setIsEditing(false)} className=\"cancelBtn\">cancel</button>\n                                //         </div>\n\n\n                                //     </div>\n                                //     <button className=\"popUpBtn\" onClick={() => setIsEditing(false)}>qwdqw</button>\n\n                                // </div>\n                                <></>\n                            }\n\n                        </div>\n                    }\n                </div>\n            </Draggable>\n\n        );\n\n    }\n\n\n    else { return null; }\n}\n\n\n\n //     for (let i = 0; i < resizer.length; i++) {\n    //         const currentRightResizer = resizer[i];\n    //         let original_width = 0;\n    //         let original_mouse_x = 0;\n    //         let original_left = 0;\n    //         let piecePositionX = piece.positionX;\n    //         let pieceDuration = piece.duration;\n    //         let elI;\n    //         if (i < 2) {\n    //             elI = 0\n    //         } else if (i % 2 === 0) {\n    //             elI = i / 2\n    //         } else {\n    //             elI = Math.floor(i / 2)\n    //         }\n\n    //         currentRightResizer.addEventListener('mousedown', function (e) {\n    //             e.preventDefault()\n    //             original_width = parseFloat(getComputedStyle(element[elI], null).getPropertyValue('width').replace('px', ''));\n    //             original_left = parseFloat(getComputedStyle(element[elI], null).getPropertyValue('left').replace('px', ''));\n    //             original_mouse_x = e.pageX;\n    //             console.log('mousedown',)\n\n    //             window.addEventListener('mousemove', resize)\n    //             window.addEventListener('mouseup', function (e) {\n    //                 window.removeEventListener('mousemove', resize);\n    //             })\n\n    //         })\n\n\n\n    //         function resize(e) {\n\n    //             // console.log('resize')\n\n    //             if (element[elI].id === `${piece.id}-dragger` && cellWidth !== 0) {\n\n\n    //                 if (currentRightResizer.classList.contains('rightHandler')) {\n    //                     let moveDiff = e.pageX - element[elI].getBoundingClientRect().left;\n    //                     let addingWidth = Math.round(moveDiff / cellWidth)\n    //                     let newWidth = addingWidth * cellWidth\n    //                     // console.log('resize rightHandlers')\n    //                     if (newWidth >= cellWidth) {\n    //                         element[elI].style.width = newWidth + 'px';\n\n    //                         piece.duration = addingWidth\n    //                         // setSomeData(piece)\n    //                     }\n    //                     moveDiff = 0;\n    //                     addingWidth = 0;\n    //                     newWidth = 0\n    //                 } else {\n    //                     let moveDiff = e.pageX - original_mouse_x;\n    //                     let math = Math.round(-moveDiff / cellWidth)\n    //                     let addingWidth = math * cellWidth\n    //                     let width = Math.round(original_width + addingWidth)\n\n    //                     let withCellWI = Math.round(cellWidth)\n\n    //                     if (width >= withCellWI) {\n    //                         element[elI].style.width = width + 'px'\n    //                         element[elI].style.left = original_left - addingWidth + 'px'\n\n    //                         piece.positionX = piecePositionX - math\n    //                         piece.duration = pieceDuration + math\n    //                         // setSomeData(piece)\n    //                     }\n    //                     // forceUpdate()\n    //                     moveDiff = 0\n    //                     math = 0\n    //                     addingWidth = 0\n    //                     withCellWI = 0\n    //                     width = 0\n    //                 }\n    //             }\n\n    //         }\n\n    //         // setTimeout(() => resize, 2000);\n\n\n\n    //     }\n\n    //     useEffect(() => {\n    //         // console.log(board[departamentID].workers[rowIndex].projects[pieceIndex])\n    //         forceUpdate()\n\n    //         setSomeData(piece)\n\n    //     }, [piece, board, rowIndex, departamentID])\n    //     // console.log('changed')","import React, { useState } from 'react'\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport moment from 'moment';\nimport cross from '../../../images/plus.svg'\n\nexport default function PopUp({ handlerAddPopUp,workerInfo,addingInfo }) {\n    const [startDate, setStartDate] = useState(new Date().getTime());\n    const [endDate, setEndDate] = useState(new Date().setDate(new Date().getDate()+1));\n    const [title, setTitle] = useState('')\n\n    const myChangeHandler = (event) => {\n        setTitle(event.target.value)\n    }\n    const addInfo = () => {\n        addingInfo(workerInfo, startDate,endDate,title)\n        handlerAddPopUp(false)\n    }\n    return (\n        <>\n\n            <div className=\"PopUp\">\n                <div className=\"popUpForm\">\n\n                        <div className=\"title\">\n                            <h1>Event  </h1>\n                            <img onClick={() => handlerAddPopUp(false)} src={cross} alt=\"cross-icon\" />\n                        </div>\n\n                        <div className=\"dates\">\n                            <p>Start from:</p>\n\n                            <DatePicker\n                                selected={startDate}\n                                onChange={data => setStartDate(data.getTime())}\n                                selectsStart\n                                startDate={startDate}\n                                endDate={endDate}\n                                dateFormat=\"MMMM d, yyyy\"\n                            />\n                            <p>End:</p>\n\n                            <DatePicker\n                                selected={endDate > startDate ? endDate : startDate}\n                                onChange={data => setEndDate(data.getTime())}\n                                selectsEnd\n                                startDate={startDate}\n                                endDate={endDate}\n                                minDate={startDate}\n                                dateFormat=\"MMMM d, yyyy\"\n                            />\n                        </div>\n\n                        <p>Enter Title:</p>\n\n                        <textarea\n                        required\n                            className=\"textarea\"\n                            type='text'\n                            onChange={myChangeHandler}\n                        />\n                        <div className=\"buttons\">\n                            <button onClick={() =>  addInfo()} className=\"submitBtn\">submit</button>\n                            <button onClick={() => handlerAddPopUp(false)} className=\"cancelBtn\">cancel</button>\n                        </div>\n\n\n                </div>\n                <button className=\"popUpBtn\" onClick={() => handlerAddPopUp(false)}>qwdqw</button>\n\n            </div>\n        </>\n    )\n}\n","\n\n export function givePositionY   (someArray)   {\n    someArray.map((departament, departamentIndex) => {\n        return departament.workers.map(worker => {\n\n            return worker.projects.reduce((acc, proj, i) => {\n                if (worker.projects.length < 1) return\n\n                if (i !== 0) {\n                  \n                    acc.forEach((v, i) => {\n                     \n                        if (v.positionY === proj.positionY) {\n                            if (proj.positionX + proj.duration <= v.positionX || v.positionX + v.duration <= proj.positionX) {\n                                // proj.positionY = 0\n\n                            } else {\n                                proj.positionY = v.positionY + 1\n\n                            }\n                        }\n                    })\n\n\n                }\n\n                acc.push(proj)\n                 const maxPos = acc.sort((a,b)=> b.positionY - a.positionY  )[0].positionY+1\n                   worker.blockHeight = maxPos\n                    // console.log(maxPos)\n                return acc\n            }, [])\n\n        })\n    })\n\n    return someArray\n}","import React, { Component } from 'react'\n\nimport { Container } from 'react-smooth-dnd';\nimport DepartmentTitle from './DepartmentTitle';\nimport Piece from './Piece';\nimport plus from '../../../images/plus.svg'\nimport PopUp from '../PopUp/PopUp';\nimport {givePositionY} from './../../lab/givePositionY'\n\n\nclass AbsoluteSmooth extends Component {\n    constructor(props) {\n        super(props);\n        this.onDrop = this.onDrop.bind(this);\n        this.shouldAcceptDrop = this.shouldAcceptDrop.bind(this);\n\n        this.handlerAddPopUp = this.handlerAddPopUp.bind(this);\n        this.onDragEnter = this.onDragEnter.bind(this);\n        this.onDragEnd = this.onDragEnd.bind(this);\n        this.onDragLeave = this.onDragLeave.bind(this);\n        this.toggler = this.toggler.bind(this);\n        this.onDragStart = this.onDragStart.bind(this);\n        this.handleMouseMove = this.handleMouseMove.bind(this);\n        this.getInnerProjectOffset = this.getInnerProjectOffset.bind(this);\n        \n        this.getDaysInRow = this.props.getDaysInRow\n        this.onDropReady = this.onDropReady.bind(this);\n\n        this.state = {\n            startDrag: false,\n            days: [],\n            daysNumber: null,\n            dayOffsetLeft: 0,\n            daysRowWidth: 0,\n            x: 0,\n            showAddPopUp: false,\n            workerInfo: [],\n            board: this.props.board,\n            innerProjectOffset: 0,\n            isEditing: false,\n        }\n\n\n    }\n\n    componentWillReceiveProps(nextProps) {\n\n        if (nextProps.days !== this.props.days) {\n            this.setState({ days: nextProps.days, daysNumber: nextProps.days.length })\n        }\n    }\n\n\n    toggler(departamentID) {\n        const newArray = [...this.state.board]\n        newArray[departamentID] = { ...newArray[departamentID], show: !newArray[departamentID].show }\n\n        this.setState({ board: newArray })\n    }\n    handlerAddPopUp(bol){\n        this.setState({ showAddPopUp: bol })\n    }\n\n    getWorkersId(departamentID, workerId){\n        this.setState({ workerInfo: [departamentID, workerId] })\n        // console.log(departamentID, workerId)\n        this.handlerAddPopUp(true)\n    }\n    getInnerProjectOffset(num){\n        this.setState({ innerProjectOffset: num })\n    }\n\n    render() {\n\n        return (\n            <>\n                {this.state.showAddPopUp && <PopUp handlerAddPopUp={this.handlerAddPopUp}  workerInfo={this.state.workerInfo} addingInfo={this.props.addingInfo}/>}\n                {/* {this.state.isEditing && <PopUp handlerAddPopUp={this.handlerAddPopUp}  workerInfo={this.state.workerInfo} addingInfo={this.props.addingInfo}/>} */}\n\n                { this.state.board.map((departament, departamentID) => {\n\n                    return (\n\n                        <div \n                        // onClick={()=>console.log('click')} \n                        key={departament.departamentName + \"-\" + departamentID} >\n\n                            <DepartmentTitle departament={departament} departamentID={departamentID} toggler={this.toggler} />\n\n                            <div className={`departmentBlock ${departament.show ? 'showDepartament' : 'hideDepartament'}`}>\n\n                                {/* {this.state.days.map((v, i) => <Lines index={i} cellWidth={ cellWidth}/> )} */}\n                                {/* <Lines index={-1} cellWidth={ cellWidth}/> */}\n\n                                {departament.workers.map((row, rowIndex) => {\n\n                                    return (\n                                        <div className=\"dayRow\" style={{  height: `${34 * row.blockHeight}px` }} key={row.surname + \"-dayRow-\" + rowIndex} >\n                                            <div className=\"emploeesName\">\n                                                <p className=\"\">{row.name} {row.surname}</p>\n                                                <button onClick={() => this.getWorkersId(departamentID, rowIndex)}><img src={plus} alt=\"plus-icon\" /></button>\n                                            </div>\n\n                                            <div   style={{ width: this.props.rowWidth, height: `${34 * row.blockHeight}px` }} id=\"inside\" className=\"day\" onMouseMove={this.handleMouseMove}>\n\n                                                <Container\n                                                    className=\"thisIsContainer\"\n                                                    style={{ position: \"relative\", height: `${34 * row.blockHeight}px` }}\n                                                    behaviour=\"drop-zone\"\n                                                    onDrop={(result) => this.onDrop(result, departamentID, rowIndex, this.props.cellWidth)}\n                                                    shouldAcceptDrop={(_, payload) => this.shouldAcceptDrop(payload, departamentID, rowIndex,)}\n                                                    getChildPayload={(i) => departament.workers[rowIndex].projects[i]}\n                                                    // onDragEnter={() => this.onDragEnter(departamentID, rowIndex,)}\n                                                    onDragLeave={() => this.onDragLeave(departamentID, rowIndex,)}\n                                                    animationDuration={'none'}\n                                                    // dropClass='dropClass'\n                                                    onDragStart={(result) => this.onDragStart(result, departamentID, rowIndex,)}\n                                                    onDragEnd={(result) => this.onDragEnd(result, departamentID, rowIndex, this.props.cellWidth)}\n                                                // onDropReady={(result) => this.onDropReady(result, departamentID, rowIndex,)}\n                                                >\n\n                                                    {row.projects.map((piece, pieceIndex) => {\n                                                        return (\n                                                            <Piece key={'piece ' + pieceIndex}\n                                                                pieceIndex={pieceIndex}\n                                                                rowIndex={rowIndex}\n                                                                departamentID={departamentID}\n                                                                deleteProject={this.props.deleteProject}\n                                                                board={this.props.board}\n                                                                piece={piece}\n                                                                cellWidth={this.props.cellWidth}\n                                                                setSomeData={this.props.setSomeData} \n                                                                getInnerProjectOffset={this.getInnerProjectOffset}\n                                                                />\n                                                        )\n                                                    })}\n                                                </Container>\n\n                                            </div>\n\n                                        </div>\n                                    );\n                                })}\n                            </div>\n                        </div>\n                    )\n                })}\n            </>\n        );\n    }\n    componentDidMount() {\n        var obj = document.getElementById('inside'); // берем интересующий элемент  \n\n        var dayOffsetLeft = obj.offsetLeft;\n        // this.daysRowdWith = this.props.size.width - dayOffsetLeft\n        this.setState({ dayOffsetLeft });\n    }\n\n\n\n    shouldAcceptDrop(payload, departament, rowIndex, colIndex) {\n\n        // const { colIndex: fromCol, rowIndex: fromRow } = payload;\n        // const fromPiece = this.state.board[departament].workers[fromRow].days[fromCol];\n        // const piece = this.state.board[departament].workers[rowIndex].days[colIndex];\n\n        // if (fromPiece === piece) return true;\n        // if (fromPiece.side === piece.side) return false;\n\n        return true;\n    }\n\n    onDrop(dropResult, departament, rowIndex, cellWidth) {\n        const { addedIndex, removedIndex, payload } = dropResult;\n        const obj = Object.assign({}, payload);\n\n        obj.positionX = Math.round(this.state.x / cellWidth) - 1\n        obj.positionY = 0\n        if (addedIndex !== null || removedIndex !== null) {\n\n\n            if (removedIndex !== null) {\n                this.state.board[departament].workers[rowIndex].projects.splice(removedIndex, 1)\n            }\n\n            if (addedIndex !== null) {\n                this.state.board[departament].workers[rowIndex].projects.push(obj);\n            }\n\n            this.setState({ startDrag: false, board: givePositionY(this.state.board) });\n\n        }\n        this.getInnerProjectOffset(0)\n        this.forceUpdate();\n\n\n    }\n\n    handleMouseMove(event) {\n\n        if (this.state.startDrag) {\n        console.log(this.state.innerProjectOffset)\n        this.setState({\n                x: event.nativeEvent.x - this.state.dayOffsetLeft-this.state.innerProjectOffset\n            });\n        }\n    }\n\n    onDragStart(result, departament, row) {\n\n\n        this.setState({ startDrag: true });\n    }\n    onDragEnter(departament, row, col) {\n\n    }\n    onDragEnd(departament, row, col) {\n\n    }\n    onDropReady(dropResult) {\n\n    }\n    onDragLeave(departament, row, col) {\n\n    }\n}\n\n\nAbsoluteSmooth.propTypes = {};\nAbsoluteSmooth.defaultProps = {\n    // cellWidth: 140,\n};\n\nexport default (AbsoluteSmooth);\n","import React, { useState, useEffect } from 'react'\nimport AbsoluteSmooth from './AbsoluteSmooth'\nimport { givePositionY } from '../../lab/givePositionY'\nimport useForceUpdate from 'use-force-update';\nimport moment from 'moment';\nconst calendarDay = 24 * 60 * 60 * 1000;\n\nconst data = [\n    {\n        departamentName: \"BACKEND\", show: true, workers: [\n            {\n                id: 'back-1', name: 'Leonid', surname: 'Bondar', department: 'back', blockHeight: 1, projects: [\n                    { positionX: 0, positionY: 0, id: \"back-1-1\", title: \"Startup\", projStart: \"Aug 15 2020\", duration: 2, type: 'main' },\n                    { positionX: 1, positionY: 0, id: \"back-2-1\", title: \"Startup\", projStart: \"Aug 15 2020\", duration: 2, type: 'main' }\n                ]\n            },\n            {\n                id: 'back-2', name: 'Boris', surname: 'Koval', department: 'back', blockHeight: 1, projects: []\n            },\n            {\n                id: 'back-3', name: 'Afanasy', surname: 'Marchenko', department: 'back', blockHeight: 1, projects: []\n            },\n            {\n                id: 'back-4', name: 'Artur', surname: 'Rudenko', department: 'back', blockHeight: 1, projects: [\n                    { positionX: 2, positionY: 0, id: \"back-4-1\", title: \"Manifest\", projStart: \"Aug 19 2020\", duration: 4, type: \"education\" }\n                ]\n            },\n            {\n                id: 'back-5', name: 'Mikhail', surname: 'Petrenko', department: 'back', blockHeight: 1, projects: []\n            }\n        ]\n    },\n    {\n        departamentName: \"QA\", show: true, workers: [\n            {\n                id: 'qa-1', name: 'Leonid', surname: 'Bondar', department: 'qa', blockHeight: 1, projects: [\n                    { positionX: 1, positionY: 0, id: \"qa-1-1\", title: \"Startup 1\", projStart: \"Aug 15 2020\", duration: 2, type: 'main' },\n                    { positionX: 3, positionY: 0, id: \"qa-1-2\", title: \"Startup 2\", projStart: \"Aug 15 2020\", duration: 2, type: 'main' },\n                ]\n            },\n            {\n                id: 'qa-2', name: 'Boris', surname: 'Koval', department: 'qa', blockHeight: 1, projects: []\n            },\n            {\n                id: 'qa-3', name: 'Afanasy', surname: 'Marchenko', department: 'qa', blockHeight: 1, projects: []\n            },\n            {\n                id: 'qa-4', name: 'Artur', surname: 'Rudenko', department: 'qa', blockHeight: 1, projects: []\n            }\n        ]\n    }\n]\n\n\n\nexport default function CalculateData({ daysInRow, rowWidth }) {\n    const [board, setBoard] = useState(data)\n    const cellWidth = rowWidth / daysInRow.length\n    const [someData, setSomeData] = useState(givePositionY(data))\n\n    const forceUpdate = useForceUpdate();\n\n\n    function addingInfo  (arr, startDate, endDate, title)  {\n        // e.preventDefault();\n        const daysLeft = Math.round((endDate - startDate) / calendarDay);\n\n        const [departamentID, workerId] = arr\n        console.log('addingInfo', departamentID, workerId, startDate, endDate, title)\n\n         board[departamentID].workers[workerId].projects.push({ positionX: 1, positionY: 0, id: \"qa-1-5\", title, projStart: \"Aug 15 2020\", duration: daysLeft, type: 'main' },)\n       console.log(board) \n    }\n\n    function deleteProject (pieceIndex, workerId, departamentID) {\n        console.log('deleteProject',pieceIndex, workerId, departamentID)\n        board[departamentID].workers[workerId].projects.splice(pieceIndex,1)\n        forceUpdate()\n    }\n\n\n    const element = document.querySelectorAll('.handlers');\n    const resizer = document.querySelectorAll('.resizer')\n\n    useEffect(() => {\n        for (let i = 0; i < resizer.length; i++) {\n            const currentResizer = resizer[i];\n            console.log('CalculateData resizer')\n            function deleteDragger() {\n                [...element].map(v => v.classList.remove(\"smooth-dnd-draggable-wrapper\"))\n            }\n            function addDragger() {\n                [...element].map(v => v.classList.add(\"smooth-dnd-draggable-wrapper\"))\n            }\n\n            currentResizer.addEventListener('mouseover', deleteDragger)\n            currentResizer.addEventListener('mouseout', addDragger)\n        }\n\n    }, [resizer])\n\n\n\n    console.log(board)\n\n    return <AbsoluteSmooth days={daysInRow} cellWidth={cellWidth} board={board} deleteProject={deleteProject} rowWidth={rowWidth} setSomeData={setSomeData} addingInfo={addingInfo} />\n}\n","import React, { Component } from 'react'\nimport DatePickerHeader from './DatePickerHeader/DatePickerHeader'\n// import Table from './Table/Table';\nimport Lines from './AbsoluteSmooth/Lines';\nimport CalculateData from './AbsoluteSmooth/CalculateData';\n// import Test from './Table/Test';\n\n\n\n\n\nexport default class System extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            daysInRow: [],\n            rowWidth: null,\n        }\n    }\n\n    getDaysInRow = (daysInRow) => {\n        this.setState({ daysInRow });\n    }\n\n    getRowWidth = (rowWidth) => {\n        this.setState({ rowWidth });\n    }\n\n    render() {\n\n        return (\n            <>\n                <div className=\"System container-fluid\">\n                    <DatePickerHeader getDaysInRow={this.getDaysInRow} getRowWidth={this.getRowWidth} />\n\n                    {/* <Table days={this.state.daysInRow} /> */}\n                    <div className=\"AbsoluteSmooth\"  >\n\n                        <CalculateData daysInRow={this.state.daysInRow} rowWidth={this.state.rowWidth} />\n\n\n                        {this.state.daysInRow.reverse().map((v, i) => <Lines key={`svgLines-${v.date}-${v.month}-${i}`} index={i} cellWidth={this.state.rowWidth / this.state.daysInRow.length} />)}\n                        <Lines index={-1} cellWidth={this.state.rowWidth / this.state.daysInRow.length} />\n                    </div>\n\n                    {/* <Test days={this.state.daysInRow} /> */}\n\n\n                </div>\n\n            </>\n        )\n    }\n}\n\n","import React from 'react';\nimport './App.scss';\n// import Join from './components/Join/Join';\nimport System from './components/System/System';\n// import { BrowserRouter as Router, Route } from 'react-router-dom'\n\n\nfunction App() {\n  return (\n    <>\n      <System />\n    </>\n  );\n}\n\nexport default App;\n\n // <Router>\n    //   <Route path=\"/\" exact component={Join} />\n    //   <Route path=\"/system\" component={System} />\n    // </Router>","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/buttonLeft.e5208634.svg\";","module.exports = __webpack_public_path__ + \"static/media/buttonRight.fb0a3ebd.svg\";","module.exports = __webpack_public_path__ + \"static/media/delete.57657217.svg\";","module.exports = __webpack_public_path__ + \"static/media/edit.2927f8de.svg\";"],"sourceRoot":""}