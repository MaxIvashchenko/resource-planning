{"version":3,"sources":["components/System/DatePickerHeader/ShowMonthLine.jsx","components/System/DatePickerHeader/ShowMDaysLine.jsx","components/System/DatePickerHeader/ButtonsSwitcher.jsx","components/System/DatePickerHeader/DatePickerHeader.jsx","components/System/Table/Table.jsx","components/System/AbsoluteSmooth/Piece.jsx","components/System/AbsoluteSmooth/AbsoluteSmooth.jsx","components/System/System.jsx","App.js","serviceWorker.js","index.js","images/buttonLeft.svg","images/buttonRight.svg"],"names":["ShowMonthLine","i","month","daysNumber","size","getWidthRow","className","style","width","sum","ShowMDaysLine","day","date","weekDay","ButtonsSwitcher","props","nameOfClass","this","onClick","handler","src","btnL","alt","children","btnR","Component","DatePickerHeader","getDaysInRow","useState","setDaysNumber","days","setDays","monthsView","setmonthsView","Date","getTime","startDate","setStartDate","setDate","getDate","endDate","setEndDate","useEffect","daysLeft","Math","round","counter","moment","add","format","year","push","id","projects","somOfDays","reduce","acc","el","Object","keys","map","num","selected","onChange","data","selectsStart","dateFormat","selectsEnd","minDate","isTrue","newStartDate","newEndDate","subtract","key","Piece","piece","element","document","querySelector","resizers","querySelectorAll","console","log","currentResizer","resize","e","classList","contains","pageX","getBoundingClientRect","left","stopResize","window","removeEventListener","addEventListener","preventDefault","length","overflow","position","type","title","AbsoluteSmooth","onDrop","bind","shouldAcceptDrop","onDragEnter","onDragEnd","onDragLeave","toggler","onDragStart","handleMouseMove","onDropReady","myRef","React","createRef","state","startDrag","dayOffsetLeft","daysRowWidth","x","cellWidth","board","departamentName","show","workers","name","surname","department","positionY","projStart","duration","nextProps","setState","wert","departamentID","newArray","current","offsetWidth","departament","arrowIcon","row","rowIndex","ref","onMouseMove","height","behaviour","result","_","payload","getChildPayload","animationDuration","dropClass","pieceIndex","getElementById","offsetLeft","colIndex","dropResult","addedIndex","removedIndex","obj","assign","splice","event","nativeEvent","col","defaultProps","System","daysInRow","rowWidth","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.6e11dc46.chunk.js","sourcesContent":["import React  from 'react'\n\nfunction ShowMonthLine({ i, month, daysNumber, size, getWidthRow }) {\n   \n  \n    return (\n        <div\n            className={i === 0 ? \"month\" : \"month borderLine\"}\n            style={{ width: `${100 / daysNumber * month.sum}%` }}>\n            {month.month}\n        </div>\n    )\n}\n\nexport default  ShowMonthLine","import React from 'react'\n\nexport default function ShowMDaysLine({ day, daysNumber }) {\n    return (\n        <div\n            className=\"day\"\n            style={{ width: `${100 / daysNumber}%` }}>\n            <p>{day.date}</p>\n            <p>{day.weekDay}</p>\n        </div>\n    )\n}\n","import React, { Component } from 'react'\nimport btnR from '../../../images/buttonRight.svg'\nimport btnL from '../../../images/buttonLeft.svg'\n\nexport default class ButtonsSwitcher extends Component {\n    constructor(props) {\n        super(props);\n        this.nameOfClass = this.props.nameOfClass\n    }\n\n    render() {\n        return (\n            <div className={this.nameOfClass}>\n                <button onClick={() => this.props.handler(false)} ><img src={btnL} alt=\"button-icon\" /></button>\n                {this.props.children}\n                <button onClick={() => this.props.handler(true)} ><img src={btnR} alt=\"button-icon\" /></button>\n            </div>\n\n        )\n    }\n}\n","import React, { useState, useEffect } from 'react'\nimport moment from 'moment';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nimport ShowMonthLine from './ShowMonthLine';\nimport ShowMDaysLine from './ShowMDaysLine';\nimport ButtonsSwitcher from './ButtonsSwitcher';\nimport sizeMe from 'react-sizeme'\n\nconst calendarDay = 24 * 60 * 60 * 1000;\n\nfunction DatePickerHeader({ getDaysInRow }) {\n    const [daysNumber, setDaysNumber] = useState(5);\n    const [days, setDays] = useState([]);\n    const [monthsView, setmonthsView] = useState([]);\n    const [startDate, setStartDate] = useState(new Date().getTime());\n    const [endDate, setEndDate] = useState(new Date().setDate(new Date().getDate() + daysNumber));\n\n    useEffect(() => {\n        const daysLeft = Math.round((endDate - startDate) / calendarDay);\n        const counter = daysLeft > 21 ? 21 : daysLeft;\n        counter !== 0 && setDaysNumber(counter)\n        const days = []\n\n        for (let i = 0; i < counter + 1; i++) {\n            const weekDay = moment(startDate).add(1 * i, 'day').format('dd');\n            const date = moment(startDate).add(1 * i, 'day').date();\n            const month = moment(startDate).add(1 * i, 'day').format('MMMM')\n            const year = moment(startDate).add(1 * i, 'day').year()\n            const projects = {}\n\n            days.push({ id: weekDay + \"-\" + date + \"-\" + month, weekDay, date, month, year,projects })\n        }\n\n        const somOfDays = days.reduce((acc, el) => {\n            acc[el.month] = (acc[el.month] || 0) + 1;\n            return acc\n        }, {});\n\n        const monthsView = Object.keys(somOfDays).map(function (num) {\n            return { month: num, sum: somOfDays[num] };\n        });\n\n        setDays(days)\n        setmonthsView(monthsView)\n        getDaysInRow(days)\n    }, [startDate, endDate, daysNumber, getDaysInRow])\n\n    const monthHandler = (isTrue) => {\n        let newStartDate, newEndDate;\n        if (isTrue) {\n            newStartDate = moment(startDate).add(1, 'month').format('x')\n            newEndDate = moment(endDate).add(1, 'month').format('x')\n\n        } else {\n            newStartDate = moment(startDate).subtract(1, 'month').format('x')\n            newEndDate = moment(endDate).subtract(1, 'month').format('x')\n        }\n\n        setStartDate(+newStartDate)\n        setEndDate(+newEndDate)\n    }\n\n    const dayHandler = (isTrue) => {\n        if (isTrue) {\n            setStartDate(startDate + calendarDay)\n            setEndDate(endDate + calendarDay)\n        } else {\n            setStartDate(startDate - calendarDay)\n            setEndDate(endDate - calendarDay)\n        }\n    }\n    const clear = () => {\n        setStartDate(new Date().getTime())\n        setEndDate(new Date().setDate(new Date().getDate() + 14))\n    }\n    return (\n        <div className=\"DatePickerHeader container-fluid\">\n            <div className=\"picker\">\n                <div className=\"calendar\">\n                    <div className=\"dates\">\n                        <DatePicker\n                            selected={startDate}\n                            onChange={data => setStartDate(data.getTime())}\n                            selectsStart\n                            startDate={startDate}\n                            endDate={endDate}\n                            dateFormat=\"MMMM d, yyyy\"\n                        />\n                        <DatePicker\n                            selected={endDate > startDate ? endDate : startDate}\n                            onChange={data => setEndDate(data.getTime())}\n                            selectsEnd\n                            startDate={startDate}\n                            endDate={endDate}\n                            minDate={startDate}\n                            dateFormat=\"MMMM d, yyyy\"\n                        />\n                        <button id=\"clearButton\" onClick={() => clear()}>Clear</button>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"datesShow\">\n\n                <ButtonsSwitcher handler={monthHandler} nameOfClass={\"months\"}>\n                    {monthsView.map((month, i) =>\n                        <ShowMonthLine\n                            i={i}\n                            key={\"month-\" + month.month + \"-\" + i}\n                            month={month}\n                            daysNumber={daysNumber}\n                        />\n                    )}\n                </ButtonsSwitcher>\n\n                <ButtonsSwitcher handler={dayHandler} nameOfClass={\"days\"}>\n                    {days.map(day =>\n                        <ShowMDaysLine\n                            key={\"headerDate-\" + day.date + \"-\" + day.i}\n                            day={day}\n                            daysNumber={daysNumber}\n                        />\n                    )}\n                </ButtonsSwitcher>\n\n            </div>\n        </div>\n\n    )\n}\n\n\nexport default  DatePickerHeader\n","import React, { Component } from 'react'\n\nimport { Container, Draggable } from 'react-smooth-dnd';\n// import moment from 'moment';\n\nimport arrowIcon from '../../../images/buttonLeft.svg'\n\nclass Table extends Component {\n    constructor(props) {\n        super(props);\n\n        this.onDrop = this.onDrop.bind(this);\n        this.shouldAcceptDrop = this.shouldAcceptDrop.bind(this);\n        this.renderPiece = this.renderPiece.bind(this);\n        this.onDragEnter = this.onDragEnter.bind(this);\n        this.onDragLeave = this.onDragLeave.bind(this);\n        this.toggler = this.toggler.bind(this);\n\n        this.onDropReady = this.onDropReady.bind(this);\n\n        this.state = {\n            days: [],\n            daysNumber: null,\n\n            board: [\n\n                {\n                    departamentName: \"BACKEND\", show: true, workers: [\n                        {\n                            id: 'back-1', name: 'Leonid', surname: 'Bondar', department: 'back', days: [\n                                { id: \"Th-13-August\", weekDay: \"Th\", date: 13, month: \"August\", year: 2020, projects: {} },\n                                { id: \"Fr-14-August\", weekDay: \"Fr\", date: 14, month: \"August\", year: 2020, projects: {} },\n                                { id: \"Sa-15-August\", weekDay: \"Sa\", date: 15, month: \"August\", year: 2020, projects: { toUser: \"back-1\", title: \"Startup\", projStart: \"Aug 15 2020\", duration: 2, type: 'main' } },\n                                { id: \"Su-16-August\", weekDay: \"Su\", date: 16, month: \"August\", year: 2020, projects: {} },\n                                { id: \"Mo-17-August\", weekDay: \"Mo\", date: 17, month: \"August\", year: 2020, projects: {} },\n                                { id: \"Tu-18-August\", weekDay: \"Tu\", date: 18, month: \"August\", year: 2020, projects: {} },\n                                { id: \"We-19-August\", weekDay: \"We\", date: 19, month: \"August\", year: 2020, projects: {} },\n                                { id: \"Th-20-August\", weekDay: \"Th\", date: 20, month: \"August\", year: 2020, projects: {} }\n                            ]\n                        },\n                        {\n                            id: 'back-2', name: 'Boris', surname: 'Koval', department: 'back', days: [\n                                { id: \"Th-13-August\", weekDay: \"Th\", date: 13, month: \"August\", year: 2020, projects: {} },\n                                { id: \"Fr-14-August\", weekDay: \"Fr\", date: 14, month: \"August\", year: 2020, projects: {} },\n                                { id: \"Sa-15-August\", weekDay: \"Sa\", date: 15, month: \"August\", year: 2020, projects: {} },\n                                { id: \"Su-16-August\", weekDay: \"Su\", date: 16, month: \"August\", year: 2020, projects: {} },\n                                { id: \"Mo-17-August\", weekDay: \"Mo\", date: 17, month: \"August\", year: 2020, projects: {} },\n                                { id: \"Tu-18-August\", weekDay: \"Tu\", date: 18, month: \"August\", year: 2020, projects: {} },\n                                { id: \"We-19-August\", weekDay: \"We\", date: 19, month: \"August\", year: 2020, projects: {} },\n                                { id: \"Th-20-August\", weekDay: \"Th\", date: 20, month: \"August\", year: 2020, projects: {} }\n                            ]\n                        },\n                        {\n                            id: 'back-3', name: 'Afanasy', surname: 'Marchenko', department: 'back', days: [\n                                { id: \"Th-13-August\", weekDay: \"Th\", date: 13, month: \"August\", year: 2020, projects: {} },\n                                { id: \"Fr-14-August\", weekDay: \"Fr\", date: 14, month: \"August\", year: 2020, projects: {} },\n                                { id: \"Sa-15-August\", weekDay: \"Sa\", date: 15, month: \"August\", year: 2020, projects: {} },\n                                { id: \"Su-16-August\", weekDay: \"Su\", date: 16, month: \"August\", year: 2020, projects: {} },\n                                { id: \"Mo-17-August\", weekDay: \"Mo\", date: 17, month: \"August\", year: 2020, projects: {} },\n                                { id: \"Tu-18-August\", weekDay: \"Tu\", date: 18, month: \"August\", year: 2020, projects: {} },\n                                { id: \"We-19-August\", weekDay: \"We\", date: 19, month: \"August\", year: 2020, projects: {} },\n                                { id: \"Th-20-August\", weekDay: \"Th\", date: 20, month: \"August\", year: 2020, projects: {} }\n                            ]\n                        },\n                        {\n                            id: 'back-4', name: 'Artur', surname: 'Rudenko', department: 'back', days: [\n                                { id: \"Th-13-August\", weekDay: \"Th\", date: 13, month: \"August\", year: 2020, projects: {} },\n                                { id: \"Fr-14-August\", weekDay: \"Fr\", date: 14, month: \"August\", year: 2020, projects: {} },\n                                { id: \"Sa-15-August\", weekDay: \"Sa\", date: 15, month: \"August\", year: 2020, projects: {} },\n                                { id: \"Su-16-August\", weekDay: \"Su\", date: 16, month: \"August\", year: 2020, projects: {} },\n                                { id: \"Mo-17-August\", weekDay: \"Mo\", date: 17, month: \"August\", year: 2020, projects: {} },\n                                { id: \"Tu-18-August\", weekDay: \"Tu\", date: 18, month: \"August\", year: 2020, projects: {} },\n                                { id: \"We-19-August\", weekDay: \"We\", date: 19, month: \"August\", year: 2020, projects: { toUser: \"back-4\", title: \"Manifest\", projStart: \"Aug 19 2020\", duration: 4, type: \"education\" } },\n                                { id: \"Th-20-August\", weekDay: \"Th\", date: 20, month: \"August\", year: 2020, projects: {} }\n                            ]\n                        },\n                        {\n                            id: 'back-5', name: 'Mikhail', surname: 'Petrenko', department: 'back', days: [\n                                { id: \"Th-13-August\", weekDay: \"Th\", date: 13, month: \"August\", year: 2020, projects: {} },\n                                { id: \"Fr-14-August\", weekDay: \"Fr\", date: 14, month: \"August\", year: 2020, projects: {} },\n                                { id: \"Sa-15-August\", weekDay: \"Sa\", date: 15, month: \"August\", year: 2020, projects: {} },\n                                { id: \"Su-16-August\", weekDay: \"Su\", date: 16, month: \"August\", year: 2020, projects: {} },\n                                { id: \"Mo-17-August\", weekDay: \"Mo\", date: 17, month: \"August\", year: 2020, projects: {} },\n                                { id: \"Tu-18-August\", weekDay: \"Tu\", date: 18, month: \"August\", year: 2020, projects: {} },\n                                { id: \"We-19-August\", weekDay: \"We\", date: 19, month: \"August\", year: 2020, projects: {} },\n                                { id: \"Th-20-August\", weekDay: \"Th\", date: 20, month: \"August\", year: 2020, projects: {} }\n                            ]\n                        }\n                    ]\n                },\n                {\n                    departamentName: \"QA\", show: true, workers: [\n                        {\n                            id: 'qa-1', name: 'Leonid', surname: 'Bondar', department: 'qa', days: [\n                                { id: \"Th-13-August\", weekDay: \"Th\", date: 13, month: \"August\", year: 2020, projects: {} },\n                                { id: \"Fr-14-August\", weekDay: \"Fr\", date: 14, month: \"August\", year: 2020, projects: {} },\n                                { id: \"Sa-15-August\", weekDay: \"Sa\", date: 15, month: \"August\", year: 2020, projects: { toUser: \"qa-1\", title: \"Startup\", projStart: \"Aug 15 2020\", duration: 2, type: 'main' } },\n                                { id: \"Su-16-August\", weekDay: \"Su\", date: 16, month: \"August\", year: 2020, projects: {} },\n                                { id: \"Mo-17-August\", weekDay: \"Mo\", date: 17, month: \"August\", year: 2020, projects: {} },\n                                { id: \"Tu-18-August\", weekDay: \"Tu\", date: 18, month: \"August\", year: 2020, projects: {} },\n                                { id: \"We-19-August\", weekDay: \"We\", date: 19, month: \"August\", year: 2020, projects: {} },\n                                { id: \"Th-20-August\", weekDay: \"Th\", date: 20, month: \"August\", year: 2020, projects: {} }\n                            ]\n                        },\n                        {\n                            id: 'qa-2', name: 'Boris', surname: 'Koval', department: 'qa', days: [\n                                { id: \"Th-13-August\", weekDay: \"Th\", date: 13, month: \"August\", year: 2020, projects: {} },\n                                { id: \"Fr-14-August\", weekDay: \"Fr\", date: 14, month: \"August\", year: 2020, projects: {} },\n                                { id: \"Sa-15-August\", weekDay: \"Sa\", date: 15, month: \"August\", year: 2020, projects: {} },\n                                { id: \"Su-16-August\", weekDay: \"Su\", date: 16, month: \"August\", year: 2020, projects: {} },\n                                { id: \"Mo-17-August\", weekDay: \"Mo\", date: 17, month: \"August\", year: 2020, projects: {} },\n                                { id: \"Tu-18-August\", weekDay: \"Tu\", date: 18, month: \"August\", year: 2020, projects: {} },\n                                { id: \"We-19-August\", weekDay: \"We\", date: 19, month: \"August\", year: 2020, projects: {} },\n                                { id: \"Th-20-August\", weekDay: \"Th\", date: 20, month: \"August\", year: 2020, projects: {} }\n                            ]\n                        },\n                        {\n                            id: 'qa-3', name: 'Afanasy', surname: 'Marchenko', department: 'qa', days: [\n                                { id: \"Th-13-August\", weekDay: \"Th\", date: 13, month: \"August\", year: 2020, projects: {} },\n                                { id: \"Fr-14-August\", weekDay: \"Fr\", date: 14, month: \"August\", year: 2020, projects: {} },\n                                { id: \"Sa-15-August\", weekDay: \"Sa\", date: 15, month: \"August\", year: 2020, projects: {} },\n                                { id: \"Su-16-August\", weekDay: \"Su\", date: 16, month: \"August\", year: 2020, projects: {} },\n                                { id: \"Mo-17-August\", weekDay: \"Mo\", date: 17, month: \"August\", year: 2020, projects: {} },\n                                { id: \"Tu-18-August\", weekDay: \"Tu\", date: 18, month: \"August\", year: 2020, projects: {} },\n                                { id: \"We-19-August\", weekDay: \"We\", date: 19, month: \"August\", year: 2020, projects: {} },\n                                { id: \"Th-20-August\", weekDay: \"Th\", date: 20, month: \"August\", year: 2020, projects: {} }\n                            ]\n                        },\n                        {\n                            id: 'qa-4', name: 'Artur', surname: 'Rudenko', department: 'qa', days: [\n                                { id: \"Th-13-August\", weekDay: \"Th\", date: 13, month: \"August\", year: 2020, projects: {} },\n                                { id: \"Fr-14-August\", weekDay: \"Fr\", date: 14, month: \"August\", year: 2020, projects: {} },\n                                { id: \"Sa-15-August\", weekDay: \"Sa\", date: 15, month: \"August\", year: 2020, projects: {} },\n                                { id: \"Su-16-August\", weekDay: \"Su\", date: 16, month: \"August\", year: 2020, projects: {} },\n                                { id: \"Mo-17-August\", weekDay: \"Mo\", date: 17, month: \"August\", year: 2020, projects: {} },\n                                { id: \"Tu-18-August\", weekDay: \"Tu\", date: 18, month: \"August\", year: 2020, projects: {} },\n                                { id: \"We-19-August\", weekDay: \"We\", date: 19, month: \"August\", year: 2020, projects: { toUser: \"qa-4\", title: \"Manifest\", projStart: \"Aug 19 2020\", duration: 4, type: \"education\" } },\n                                { id: \"Th-20-August\", weekDay: \"Th\", date: 20, month: \"August\", year: 2020, projects: {} }\n                            ]\n                        }\n                    ]\n                }\n\n\n            ]\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.days !== this.props.days) {\n            this.setState({ days: nextProps.days, daysNumber: nextProps.days.length })\n        }\n    }\n\n    renderPiece(item) {\n\n        if (item) {\n            return (\n                <Draggable style={{ overflow: \"visible\" }}>\n                    <div className={item.type} >\n                        <div  className=\"project\">{item.title}</div>\n                    </div>\n                </Draggable>\n            );\n        } else {\n            return null;\n        }\n    }\n\n    toggler(departamentID) {\n        const newArray = [...this.state.board]\n        newArray[departamentID] = { ...newArray[departamentID], show: !newArray[departamentID].show }\n\n        this.setState({ board: newArray })\n    }\n\n    render() {\n\n        return (\n            <div className=\"Staff\">\n                {this.state.board.map((departament, departamentID) => {\n\n                    return (\n                        <div key={departament.name+departamentID}>\n                            <div className=\"departmentTitle\">\n                                <h5>{departament.departamentName}</h5>\n                                <button\n                                    onClick={() => this.toggler(departamentID)}\n                                    className=\"departmentBtn\"><img className={departament.show ? \"show\" : \"hide\"} src={arrowIcon} alt=\"arrow icon\" /></button>\n                            </div>\n\n                            <div className={`departmentBlock ${departament.show ? 'showDepartament' : 'hideDepartament'}`}>\n                                {departament.workers.map((row, rowIndex) => {\n\n                                    return (\n                                        <div className=\"dayRow\" key={rowIndex}>\n                                            <p>{row.name} {row.surname}</p>\n\n                                            {row.days.map((piece, colIndex) => {\n\n                                                return (\n                                                    <div className=\"day\"\n                                                        key={`${rowIndex}${colIndex}`}\n                                                        style={{ width: `${100 / this.state.daysNumber}%` }}\n                                                    >\n                                                        <Container\n                                                            // style={{ height: '100%' }}\n                                                            behaviour=\"drop-zone\"\n                                                            onDrop={(result) => this.onDrop(result, departamentID, rowIndex, colIndex)}\n                                                            shouldAcceptDrop={(_, payload) => this.shouldAcceptDrop(payload, departamentID, rowIndex, colIndex)}\n                                                            getChildPayload={() => ({ colIndex, rowIndex, piece: piece.projects })}\n                                                            onDragEnter={() => this.onDragEnter(departamentID, rowIndex, colIndex)}\n                                                            onDragLeave={() => this.onDragLeave(departamentID, rowIndex, colIndex)}\n                                                            onDropReady={(result) => this.onDropReady(result, departamentID, rowIndex, colIndex)}\n                                                        >\n                                                            {this.renderPiece(piece.projects)}\n                                                        </Container>\n                                                    </div>\n                                                );\n                                            })}\n                                        </div>\n                                    );\n                                })}\n                            </div>\n                        </div>\n                    )\n\n\n                })}\n\n            </div>\n        );\n    }\n\n\n    shouldAcceptDrop(payload, departament, rowIndex, colIndex) {\n\n        // const { colIndex: fromCol, rowIndex: fromRow } = payload;\n        // const fromPiece = this.state.board[departament].workers[fromRow].days[fromCol];\n        // const piece = this.state.board[departament].workers[rowIndex].days[colIndex];\n\n        // if (fromPiece === piece) return true;\n        // if (fromPiece.side === piece.side) return false;\n\n        return true;\n    }\n\n    onDrop(dropResult, departament, rowIndex, colIndex) {\n        const { addedIndex, removedIndex, payload } = dropResult;\n\n        if (addedIndex !== null || removedIndex !== null) {\n            if (removedIndex !== null) {\n                this.state.board[departament].workers[rowIndex].days[colIndex] = { projects: {} };\n            }\n\n            if (addedIndex !== null) {\n                this.state.board[departament].workers[rowIndex].days[colIndex].projects = payload.piece;\n            }\n\n            this.forceUpdate();\n        }\n    }\n\n    onDragEnter(departament, row, col) {\n        // this.state.board[departament].workers[row].days[col].hover = true;\n        // this.forceUpdate();\n    }\n    onDropReady(dropResult) {\n        // const { removedIndex, addedIndex, payload, element } = dropResult;\n    }\n    onDragLeave(departament, row, col) {\n        // this.state.board[departament].workers[row].days[col].hover = false;\n        // this.forceUpdate();\n    }\n}\n\nTable.propTypes = {};\n\nexport default Table;\n","import React from 'react'\nimport { Draggable } from 'react-smooth-dnd';\n\n\nexport default function Piece({ piece, daysNumber }) {\n    const element = document.querySelector('.handlers');\n    const resizers = document.querySelectorAll('.rightHandler')\n    console.log(resizers)\n    for (let i = 0; i < resizers.length; i++) {\n        const currentResizer = resizers[i];\n        currentResizer.addEventListener('mousedown', function (e) {\n            e.preventDefault()\n            window.addEventListener('mousemove', resize)\n            window.addEventListener('mouseup', stopResize)\n        })\n        function resize(e) {\n            if (currentResizer.classList.contains('rightHandler')) {\n                element.style.width = e.pageX - element.getBoundingClientRect().left + 'px'\n            }\n        }\n\n        function stopResize() {\n            window.removeEventListener('mousemove', resize)\n        }\n    }\n\n    if (piece) {\n        return (\n            // <div\n                <Draggable \n                key={piece.id + \"-draggable\"} style={{ overflow: \"visible\", position: 'absolute', left: piece.left, width: `${100 / daysNumber}%` }}>\n                <div className={`handlers ${piece.type}`} >\n                    <div className=\"project\">{piece.title}</div>\n                    <div className=\"resizer leftHandler\" />\n                    <div className=\"resizer rightHandler\" />\n                </div>\n                </Draggable>\n            // </div>\n        );\n    } else { return null; }\n}\n\n","import React, { Component } from 'react'\n\nimport { Container, Draggable } from 'react-smooth-dnd';\n// import moment from 'moment';\n\nimport arrowIcon from '../../../images/buttonLeft.svg'\n// import sizeMe from 'react-sizeme'\nimport Piece from './Piece';\n\n\n\nclass AbsoluteSmooth extends Component {\n    constructor(props) {\n        super(props);\n        this.onDrop = this.onDrop.bind(this);\n        this.shouldAcceptDrop = this.shouldAcceptDrop.bind(this);\n\n        this.onDragEnter = this.onDragEnter.bind(this);\n        this.onDragEnd = this.onDragEnd.bind(this);\n        this.onDragLeave = this.onDragLeave.bind(this);\n        this.toggler = this.toggler.bind(this);\n        this.onDragStart = this.onDragStart.bind(this);\n        this.handleMouseMove = this.handleMouseMove.bind(this);\n\n        this.onDropReady = this.onDropReady.bind(this);\n        this.myRef = React.createRef()\n\n        this.state = {\n            startDrag: false,\n            days: [],\n            daysNumber: null,\n            dayOffsetLeft: 0,\n            daysRowWidth: 0,\n            x: 0,\n            cellWidth: null,\n\n            board: [\n                {\n                    departamentName: \"BACKEND\", show: true, workers: [\n                        {\n                            id: 'back-1', name: 'Leonid', surname: 'Bondar', department: 'back', projects: [\n                                { left: 0, positionY: 1, id: \"back-1-1\", title: \"Startup\", projStart: \"Aug 15 2020\", duration: 2, type: 'main' }\n                            ]\n                        },\n                        {\n                            id: 'back-2', name: 'Boris', surname: 'Koval', department: 'back', projects: []\n                        },\n                        {\n                            id: 'back-3', name: 'Afanasy', surname: 'Marchenko', department: 'back', projects: []\n                        },\n                        {\n                            id: 'back-4', name: 'Artur', surname: 'Rudenko', department: 'back', projects: [\n                                { left: 240,positionY:1, id: \"back-4-1\", title: \"Manifest\", projStart: \"Aug 19 2020\", duration: 4, type: \"education\" }\n                            ]\n                        },\n                        {\n                            id: 'back-5', name: 'Mikhail', surname: 'Petrenko', department: 'back', projects: []\n                        }\n                    ]\n                },\n                {\n                    departamentName: \"QA\", show: true, workers: [\n                        {\n                            id: 'qa-1', name: 'Leonid', surname: 'Bondar', department: 'qa', projects: [\n                                { left: 120,positionY:1, id: \"qa-1-1\", title: \"Startup 1\", projStart: \"Aug 15 2020\", duration: 2, type: 'main' },\n                                { left: 131 * 4,positionY:1, id: \"qa-1-2\", title: \"Startup 2\", projStart: \"Aug 15 2020\", duration: 2, type: 'main' },\n                            ]\n                        },\n                        {\n                            id: 'qa-2', name: 'Boris', surname: 'Koval', department: 'qa', projects: []\n                        },\n                        {\n                            id: 'qa-3', name: 'Afanasy', surname: 'Marchenko', department: 'qa', projects: []\n                        },\n                        {\n                            id: 'qa-4', name: 'Artur', surname: 'Rudenko', department: 'qa', projects: []\n                        }\n                    ]\n                }\n            ]\n        }\n        // this.daysRowdWith = this.props.size.width - this.state.dayOffsetLeft\n\n    }\n\n    componentWillReceiveProps(nextProps) {\n\n        if (nextProps.days !== this.props.days) {\n            this.setState({ days: nextProps.days, daysNumber: nextProps.days.length })\n        } else if (nextProps.cellWidth !== this.props.cellWidth) {\n            this.wert = nextProps.cellWidth && nextProps.cellWidth\n            this.setState({ cellWidth: nextProps.cellWidth })\n        }\n    }\n \n\n    toggler(departamentID) {\n        const newArray = [...this.state.board]\n        newArray[departamentID] = { ...newArray[departamentID], show: !newArray[departamentID].show }\n\n        this.setState({ board: newArray })\n    }\n\n    render() {\n        const cellWidth = this.myRef.current && this.myRef.current.offsetWidth/this.state.daysNumber\n        // const { cellWidth } = this.state\n        // console.log(this.state)\n        // const { width, height } = this.props.size\n        // console.log('render',cellWidth)\n        return (\n            <div className=\"AbsoluteSmooth\"  >\n                {this.state.board.map((departament, departamentID) => {\n\n                    return (\n                        <div key={departament.departamentName + \"-\" + departamentID} >\n                            <div className=\"departmentTitle\">\n                                <h5>{departament.departamentName}</h5>\n                                <button\n                                    onClick={() => this.toggler(departamentID)}\n                                    className=\"departmentBtn\"><img className={departament.show ? \"show\" : \"hide\"} src={arrowIcon} alt=\"arrow icon\" /></button>\n                            </div>\n\n                            <div className={`departmentBlock ${departament.show ? 'showDepartament' : 'hideDepartament'}`}>\n                                {departament.workers.map((row, rowIndex) => {\n\n                                    return (\n                                        <div className=\"dayRow\" key={row.surname + \"-dayRow-\" + rowIndex} >\n                                            <p>{row.name} {row.surname}</p>\n                                            \n                                            <div ref={this.myRef} id=\"inside\" className=\"day\" onMouseMove={this.handleMouseMove}>\n                                                <Container\n                                                \n                                                    style={{ position: \"relative\", height: '100%' }}\n                                                    behaviour=\"drop-zone\"\n                                                    onDrop={(result) => this.onDrop(result, departamentID, rowIndex,cellWidth)}\n                                                    shouldAcceptDrop={(_, payload) => this.shouldAcceptDrop(payload, departamentID, rowIndex,)}\n                                                    getChildPayload={(i) => departament.workers[rowIndex].projects[i]}\n                                                    // onDragEnter={() => this.onDragEnter(departamentID, rowIndex,)}\n                                                    onDragLeave={() => this.onDragLeave(departamentID, rowIndex,)}\n                                                    animationDuration='none'\n                                                    dropClass='dropClass'\n                                                    onDragStart={(result) => this.onDragStart(result, departamentID, rowIndex,)}\n                                                    onDragEnd={(result) => this.onDragEnd(result, departamentID, rowIndex, cellWidth)}\n                                                // onDropReady={(result) => this.onDropReady(result, departamentID, rowIndex,)}\n                                                >\n                                                    {row.projects.map((piece, pieceIndex) => <Piece key={'piece ' + pieceIndex} daysNumber={this.state.daysNumber} piece={piece} />)}\n                                                </Container>\n\n                                            </div>\n\n                                        </div>\n                                    );\n                                })}\n                            </div>\n                        </div>\n                    )\n                })}\n            </div>\n        );\n    }\n    componentDidMount() {\n        var obj = document.getElementById('inside'); // берем интересующий элемент  \n\n        var dayOffsetLeft = obj.offsetLeft;\n        // this.daysRowdWith = this.props.size.width - dayOffsetLeft\n        this.setState({ dayOffsetLeft });\n    }\n\n    componentWillUpdate(){\n        // console.log(this.myRef.current.offsetWidth)\n\n    }\n\n    shouldAcceptDrop(payload, departament, rowIndex, colIndex) {\n\n        // const { colIndex: fromCol, rowIndex: fromRow } = payload;\n        // const fromPiece = this.state.board[departament].workers[fromRow].days[fromCol];\n        // const piece = this.state.board[departament].workers[rowIndex].days[colIndex];\n\n        // if (fromPiece === piece) return true;\n        // if (fromPiece.side === piece.side) return false;\n\n        return true;\n    }\n\n    onDrop(dropResult, departament, rowIndex,cellWidth) {\n        const { addedIndex, removedIndex, payload } = dropResult;\n        const obj =   Object.assign({}, payload);\n\n        obj.left  =Math.round(this.state.x /  cellWidth) *  cellWidth\n        // console.log('onDrop',this.state.x, obj.left)\n\n        if (addedIndex !== null || removedIndex !== null) {\n\n\n            if (removedIndex !== null) {\n\n                this.state.board[departament].workers[rowIndex].projects.splice(removedIndex, 1)\n            }\n\n            if (addedIndex !== null) {\n\n                this.state.board[departament].workers[rowIndex].projects.push(obj);\n            }\n\n            this.setState({ startDrag: false });\n            // this.forceUpdate();\n        }\n    }\n\n    handleMouseMove(event) {\n        if (this.state.startDrag) {\n            this.setState({\n                x: event.nativeEvent.x - this.state.dayOffsetLeft\n            });\n        }\n    }\n\n    onDragStart(result, departament, row) {\n        // this.state.board[departament].workers[row].days[col].hover = true;\n        // console.log(result, departament, row)\n\n        this.setState({ startDrag: true });\n        // this.forceUpdate();\n    }\n    onDragEnter(departament, row, col) {\n        // this.state.board[departament].workers[row].days[col].hover = true;\n        // this.forceUpdate();\n    }\n    onDragEnd(departament, row, col) {\n        // this.state.board[departament].workers[row].days[col].hover = true;\n        // this.forceUpdate();\n     \n        // console.log('onDragEnd',this.state.x)\n\n    }\n    onDropReady(dropResult) {\n        // const { removedIndex, addedIndex, payload, element } = dropResult;\n    }\n    onDragLeave(departament, row, col) {\n        // console.log(departament, row)\n        // this.state.board[departament].workers[row].days[col].hover = false;\n        // this.forceUpdate();\n    }\n}\n\n\nAbsoluteSmooth.propTypes = {};\nAbsoluteSmooth.defaultProps = {\n    // cellWidth: 140,\n};\n\nexport default (AbsoluteSmooth);\n","import React, { Component } from 'react'\nimport DatePickerHeader from './DatePickerHeader/DatePickerHeader'\nimport Table from './Table/Table';\nimport AbsoluteSmooth from './AbsoluteSmooth/AbsoluteSmooth';\n// import Test from './Table/Test';\n// import Grid from './Grid/Grid'\n\n\n\n\nexport default class System extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            daysInRow: [],\n            rowWidth: null,\n        }\n\n    }\n\n\n    getDaysInRow = (daysInRow) => {\n        this.setState({ daysInRow });\n    }\n    \n    render() {\n        \n// console.log(cellWidth)\n        return (\n            <>\n                <div className=\"System container-fluid\">\n                    <DatePickerHeader   getDaysInRow={this.getDaysInRow} />\n\n                    {/* <div ref={this.ref} className='drag'> Resize me!  </div> */}\n\n                    {/* <Table days={this.state.daysInRow} /> */}\n                    <AbsoluteSmooth days={this.state.daysInRow}   />\n\n                    {/* <Test days={this.state.daysInRow} /> */}\n                    {/* <ChessApp /> */}\n                    {/* <Grid /> */}\n\n                </div>\n\n            </>\n        )\n    }\n}\n\n","import React from 'react';\nimport './App.scss';\n// import Join from './components/Join/Join';\nimport System from './components/System/System';\n// import { BrowserRouter as Router, Route } from 'react-router-dom'\n\n\nfunction App() {\n  return (\n    <>\n      <System />\n    </>\n  );\n}\n\nexport default App;\n\n // <Router>\n    //   <Route path=\"/\" exact component={Join} />\n    //   <Route path=\"/system\" component={System} />\n    // </Router>","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/buttonLeft.e5208634.svg\";","module.exports = __webpack_public_path__ + \"static/media/buttonRight.fb0a3ebd.svg\";"],"sourceRoot":""}