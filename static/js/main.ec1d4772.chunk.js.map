{"version":3,"sources":["components/System/DatePickerHeader/ShowMonthLine.jsx","components/System/DatePickerHeader/ShowMDaysLine.jsx","components/System/DatePickerHeader/ButtonsSwitcher.jsx","components/System/DatePickerHeader/DatePickerHeader.jsx","components/System/AbsoluteSmooth/DepartmentTitle.jsx","components/System/AbsoluteSmooth/Lines.jsx","components/System/AbsoluteSmooth/Piece.jsx","components/System/AbsoluteSmooth/AbsoluteSmooth.jsx","components/System/AbsoluteSmooth/CalculateData.jsx","components/System/System.jsx","App.js","serviceWorker.js","index.js","images/buttonLeft.svg","images/buttonRight.svg"],"names":["withSize","i","month","daysNumber","size","getRowWidth","getWidthRow","useEffect","console","log","width","className","style","sum","ShowMDaysLine","day","date","weekDay","ButtonsSwitcher","props","nameOfClass","this","onClick","handler","src","btnL","alt","children","btnR","Component","DatePickerHeader","getDaysInRow","useState","setDaysNumber","days","setDays","monthsView","setmonthsView","Date","getTime","startDate","setStartDate","setDate","getDate","endDate","setEndDate","daysLeft","Math","round","counter","moment","add","format","year","push","id","projects","somOfDays","reduce","acc","el","Object","keys","map","num","selected","onChange","data","selectsStart","dateFormat","selectsEnd","minDate","isTrue","newStartDate","newEndDate","subtract","key","DepartmentTitle","departament","departamentID","toggler","name","departamentName","show","arrowIcon","Lines","index","cellWidth","indexs","height","version","x1","y1","stroke","fill","strokeDasharray","strokeWidth","Piece","piece","element","document","querySelector","resizers","querySelectorAll","currentResizer","resize","e","classList","contains","pageX","getBoundingClientRect","left","stopResize","window","removeEventListener","addEventListener","preventDefault","length","overflow","position","type","title","AbsoluteSmooth","onDrop","bind","shouldAcceptDrop","onDragEnter","onDragEnd","onDragLeave","onDragStart","handleMouseMove","onDropReady","myRef","React","createRef","state","startDrag","dayOffsetLeft","daysRowWidth","x","board","nextProps","setState","newArray","current","offsetWidth","workers","row","rowIndex","surname","ref","onMouseMove","behaviour","result","_","payload","getChildPayload","animationDuration","dropClass","pieceIndex","getElementById","offsetLeft","colIndex","dropResult","addedIndex","removedIndex","obj","assign","splice","event","nativeEvent","col","defaultProps","CalculateData","daysInRow","rowWidth","department","positionY","projStart","duration","System","v","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.ec1d4772.chunk.js","sourcesContent":["import React, { useEffect } from 'react'\nimport { withSize } from 'react-sizeme'\n\nfunction ShowMonthLine({ i, month, daysNumber, size, getWidthRow, getRowWidth }) {\n\n    useEffect(() => {\n        console.log('ShowMonthLine render')\n        getRowWidth(size.width)\n    }, [getRowWidth, size.width])\n\n    return (\n        <div\n            className={i === 0 ? \"month\" : \"month borderLine\"}\n            style={{ width: `${100 / daysNumber * month.sum}%` }}>\n            {month.month}\n        </div>\n    )\n}\n\nexport default withSize()(ShowMonthLine)","import React from 'react'\n\nexport default function ShowMDaysLine({ day, daysNumber }) {\n    return (\n        <div\n            className=\"day\"\n            style={{ width: `${100 / daysNumber}%` }}>\n            <p>{day.date}</p>\n            <p>{day.weekDay}</p>\n        </div>\n    )\n}\n","import React, { Component } from 'react'\nimport btnR from '../../../images/buttonRight.svg'\nimport btnL from '../../../images/buttonLeft.svg'\n\nexport default class ButtonsSwitcher extends Component {\n    constructor(props) {\n        super(props);\n        this.nameOfClass = this.props.nameOfClass\n    }\n\n    render() {\n        return (\n            <div className={this.nameOfClass}>\n                <button onClick={() => this.props.handler(false)} ><img src={btnL} alt=\"button-icon\" /></button>\n                {this.props.children}\n                <button onClick={() => this.props.handler(true)} ><img src={btnR} alt=\"button-icon\" /></button>\n            </div>\n\n        )\n    }\n}\n","import React, { useState, useEffect } from 'react'\nimport moment from 'moment';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nimport ShowMonthLine from './ShowMonthLine';\nimport ShowMDaysLine from './ShowMDaysLine';\nimport ButtonsSwitcher from './ButtonsSwitcher';\n// import sizeMe from 'react-sizeme'\n\nconst calendarDay = 24 * 60 * 60 * 1000;\n\nfunction DatePickerHeader({ getDaysInRow ,getRowWidth}) {\n    const [daysNumber, setDaysNumber] = useState(5);\n    const [days, setDays] = useState([]);\n    const [monthsView, setmonthsView] = useState([]);\n    const [startDate, setStartDate] = useState(new Date().getTime());\n    const [endDate, setEndDate] = useState(new Date().setDate(new Date().getDate() + daysNumber));\n\n    useEffect(() => {\n        const daysLeft = Math.round((endDate - startDate) / calendarDay);\n        const counter = daysLeft > 21 ? 21 : daysLeft;\n        counter !== 0 && setDaysNumber(counter)\n        const days = []\n\n        for (let i = 0; i < counter + 1; i++) {\n            const weekDay = moment(startDate).add(1 * i, 'day').format('dd');\n            const date = moment(startDate).add(1 * i, 'day').date();\n            const month = moment(startDate).add(1 * i, 'day').format('MMMM')\n            const year = moment(startDate).add(1 * i, 'day').year()\n            const projects = {}\n\n            days.push({ id: weekDay + \"-\" + date + \"-\" + month, weekDay, date, month, year,projects })\n        }\n\n        const somOfDays = days.reduce((acc, el) => {\n            acc[el.month] = (acc[el.month] || 0) + 1;\n            return acc\n        }, {});\n\n        const monthsView = Object.keys(somOfDays).map(function (num) {\n            return { month: num, sum: somOfDays[num] };\n        });\n\n        setDays(days)\n        setmonthsView(monthsView)\n        getDaysInRow(days)\n    }, [startDate, endDate, daysNumber, getDaysInRow])\n\n    const monthHandler = (isTrue) => {\n        let newStartDate, newEndDate;\n        if (isTrue) {\n            newStartDate = moment(startDate).add(1, 'month').format('x')\n            newEndDate = moment(endDate).add(1, 'month').format('x')\n\n        } else {\n            newStartDate = moment(startDate).subtract(1, 'month').format('x')\n            newEndDate = moment(endDate).subtract(1, 'month').format('x')\n        }\n\n        setStartDate(+newStartDate)\n        setEndDate(+newEndDate)\n    }\n\n    const dayHandler = (isTrue) => {\n        if (isTrue) {\n            setStartDate(startDate + calendarDay)\n            setEndDate(endDate + calendarDay)\n        } else {\n            setStartDate(startDate - calendarDay)\n            setEndDate(endDate - calendarDay)\n        }\n    }\n    const clear = () => {\n        setStartDate(new Date().getTime())\n        setEndDate(new Date().setDate(new Date().getDate() + 14))\n    }\n    // console.log('rerender')\n    return (\n        <div className=\"DatePickerHeader container-fluid\">\n            <div className=\"picker\">\n                <div className=\"calendar\">\n                    <div className=\"dates\">\n                        <DatePicker\n                            selected={startDate}\n                            onChange={data => setStartDate(data.getTime())}\n                            selectsStart\n                            startDate={startDate}\n                            endDate={endDate}\n                            dateFormat=\"MMMM d, yyyy\"\n                        />\n                        <DatePicker\n                            selected={endDate > startDate ? endDate : startDate}\n                            onChange={data => setEndDate(data.getTime())}\n                            selectsEnd\n                            startDate={startDate}\n                            endDate={endDate}\n                            minDate={startDate}\n                            dateFormat=\"MMMM d, yyyy\"\n                        />\n                        <button id=\"clearButton\" onClick={() => clear()}>Clear</button>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"datesShow\">\n\n                <ButtonsSwitcher handler={monthHandler} nameOfClass={\"months\"}>\n                    {monthsView.map((month, i) =>\n                        <ShowMonthLine\n                            i={i}\n                            key={\"month-\" + month.month + \"-\" + i}\n                            month={month}\n                            daysNumber={daysNumber}\n                            getRowWidth={getRowWidth}\n                        />\n                    )}\n                </ButtonsSwitcher>\n\n                <ButtonsSwitcher handler={dayHandler} nameOfClass={\"days\"}>\n                    {days.map(day =>\n                        <ShowMDaysLine\n                            key={\"headerDate-\" + day.date + \"-\" + day.i}\n                            day={day}\n                            daysNumber={daysNumber}\n                        />\n                    )}\n                </ButtonsSwitcher>\n\n            </div>\n        </div>\n\n    )\n}\n\n\nexport default  DatePickerHeader\n","import React from 'react'\nimport arrowIcon from '../../../images/buttonLeft.svg'\n\nexport default function DepartmentTitle({ departament, departamentID, toggler }) {\n    // console.log('rerender DepartmentTitle')\n    return (\n        <div className=\"departmentTitle\" key={\"key-\"+departament.name+\"-\"+departamentID}>\n            <h5>{departament.departamentName}</h5>\n            <button\n                onClick={() =>  toggler(departamentID)}\n                className=\"departmentBtn\"><img className={departament.show ? \"show\" : \"hide\"} src={arrowIcon} alt=\"arrow icon\" /></button>\n        </div>\n    )\n}\n","import React, { useEffect } from 'react'\n\nexport default function Lines({ index, cellWidth }) {\n    const indexs = index + 1\n\n    useEffect(() => {\n\n       \n        \n\n\n    }, [cellWidth])\n\n\n\n    console.log('rerender Lines' )\n    return (\n        <div key={`svgLines-right-${cellWidth * indexs}px`} className='svgLines' style={{ 'right': `${cellWidth * indexs+20}px` }}>\n\n            <svg key={\"svg-\"} width='1px' height=\"100%\" version=\"1.1\" >\n\n                <line x1=\"0\" y1=\"100%\" stroke=\"black\" fill=\"transparent\" strokeDasharray=\"4\" strokeWidth=\"1\" />\n                <line x1=\"100%\" y1=\"100%\" stroke=\"black\" fill=\"transparent\" strokeDasharray=\"4\" strokeWidth=\"1\" />\n\n\n            </svg>\n        </div>\n    )\n\n}\n","import React from 'react'\nimport { Draggable } from 'react-smooth-dnd';\n\n\nexport default function Piece({ piece, daysNumber,cellWidth }) {\n    const element = document.querySelector('.handlers');\n    const resizers = document.querySelectorAll('.rightHandler')\n    // console.log(resizers)\n    for (let i = 0; i < resizers.length; i++) {\n        const currentResizer = resizers[i];\n        currentResizer.addEventListener('mousedown', function (e) {\n            e.preventDefault()\n            window.addEventListener('mousemove', resize)\n            window.addEventListener('mouseup', stopResize)\n        })\n        function resize(e) {\n            if (currentResizer.classList.contains('rightHandler')) {\n                element.style.width = e.pageX - element.getBoundingClientRect().left + 'px'\n            }\n        }\n\n        function stopResize() {\n            window.removeEventListener('mousemove', resize)\n        }\n    }\n\n    if (piece) {\n        console.log(cellWidth)\n        return (\n            // <div\n                <Draggable \n                key={piece.id + \"-draggable\"} style={{ overflow: \"visible\", position: 'absolute', left: piece.left, width: cellWidth }}>\n                <div className={`handlers ${piece.type}`} >\n                    <div className=\"project\">{piece.title}</div>\n                    <div className=\"resizer leftHandler\" />\n                    <div className=\"resizer rightHandler\" />\n                </div>\n                </Draggable>\n            // </div>\n        );\n    } else { return null; }\n}\n\n","import React, { Component } from 'react'\n\nimport { Container, Draggable } from 'react-smooth-dnd';\nimport DepartmentTitle from './DepartmentTitle';\n// import moment from 'moment';\n\nimport Lines from './Lines';\n// import sizeMe from 'react-sizeme'\nimport Piece from './Piece';\n\n\n\nclass AbsoluteSmooth extends Component {\n    constructor(props) {\n        super(props);\n        this.onDrop = this.onDrop.bind(this);\n        this.shouldAcceptDrop = this.shouldAcceptDrop.bind(this);\n\n        this.onDragEnter = this.onDragEnter.bind(this);\n        this.onDragEnd = this.onDragEnd.bind(this);\n        this.onDragLeave = this.onDragLeave.bind(this);\n        this.toggler = this.toggler.bind(this);\n        this.onDragStart = this.onDragStart.bind(this);\n        this.handleMouseMove = this.handleMouseMove.bind(this);\n\n        this.getDaysInRow = this.props.getDaysInRow\n        this.onDropReady = this.onDropReady.bind(this);\n        this.myRef = React.createRef()\n        this.cellWidth = this.props.cellWidth\n\n        this.state = {\n            startDrag: false,\n            days: [],\n            daysNumber: null,\n            dayOffsetLeft: 0,\n            daysRowWidth: 0,\n            x: 0,\n\n\n            board: this.props.board\n        }\n        // this.daysRowdWith = this.props.size.width - this.state.dayOffsetLeft\n\n    }\n\n    componentWillReceiveProps(nextProps) {\n\n        if (nextProps.days !== this.props.days) {\n            this.setState({ days: nextProps.days, daysNumber: nextProps.days.length })\n        } \n    }\n\n\n    toggler(departamentID) {\n        const newArray = [...this.state.board]\n        newArray[departamentID] = { ...newArray[departamentID], show: !newArray[departamentID].show }\n\n        this.setState({ board: newArray })\n    }\n\n    render() {\n        const cellWidth = this.myRef.current && this.myRef.current.offsetWidth / this.state.daysNumber\n        this.cellWidth = cellWidth\n        // console.log(this.myRef.current && this.myRef.current.offsetWidth)\n        // const { cellWidth } = this.state\n        // console.log(this.state)\n        // const { width, height } = this.props.size\n        // console.log('render',cellWidth)\n        return (\n\n\n            this.state.board.map((departament, departamentID) => {\n\n                return (\n\n                    <div key={departament.departamentName + \"-\" + departamentID} >\n\n                        <DepartmentTitle departament={departament} departamentID={departamentID} toggler={this.toggler} />\n\n                        <div className={`departmentBlock ${departament.show ? 'showDepartament' : 'hideDepartament'}`}>\n\n                            {/* {this.state.days.map((v, i) => <Lines index={i} cellWidth={ cellWidth}/> )} */}\n                            {/* <Lines index={-1} cellWidth={ cellWidth}/> */}\n\n                            {departament.workers.map((row, rowIndex) => {\n\n                                return (\n                                    <div className=\"dayRow\" key={row.surname + \"-dayRow-\" + rowIndex} >\n                                        <p className=\"emploeesName\">{row.name} {row.surname}</p>\n\n                                        <div ref={this.myRef} id=\"inside\" className=\"day\" onMouseMove={this.handleMouseMove}>\n\n                                            <Container\n\n                                                style={{ position: \"relative\", height: '100%' }}\n                                                behaviour=\"drop-zone\"\n                                                onDrop={(result) => this.onDrop(result, departamentID, rowIndex, this.cellWidth)}\n                                                shouldAcceptDrop={(_, payload) => this.shouldAcceptDrop(payload, departamentID, rowIndex,)}\n                                                getChildPayload={(i) => departament.workers[rowIndex].projects[i]}\n                                                // onDragEnter={() => this.onDragEnter(departamentID, rowIndex,)}\n                                                onDragLeave={() => this.onDragLeave(departamentID, rowIndex,)}\n                                                animationDuration={'none'}\n                                                dropClass='dropClass'\n                                                onDragStart={(result) => this.onDragStart(result, departamentID, rowIndex,)}\n                                                onDragEnd={(result) => this.onDragEnd(result, departamentID, rowIndex, this.cellWidth)}\n                                            // onDropReady={(result) => this.onDropReady(result, departamentID, rowIndex,)}\n                                            >\n\n                                                {row.projects.map((piece, pieceIndex) => <Piece key={'piece ' + pieceIndex} daysNumber={this.state.daysNumber} piece={piece} cellWidth={this.cellWidth}/>)}\n                                            </Container>\n\n                                        </div>\n\n                                    </div>\n                                );\n                            })}\n                        </div>\n                    </div>\n                )\n            })\n\n        );\n    }\n    componentDidMount() {\n        var obj = document.getElementById('inside'); // берем интересующий элемент  \n\n        var dayOffsetLeft = obj.offsetLeft;\n        // this.daysRowdWith = this.props.size.width - dayOffsetLeft\n        this.setState({ dayOffsetLeft });\n    }\n\n    componentWillUpdate() {\n        // console.log(this.myRef.current.offsetWidth)\n\n    }\n\n    shouldAcceptDrop(payload, departament, rowIndex, colIndex) {\n\n        // const { colIndex: fromCol, rowIndex: fromRow } = payload;\n        // const fromPiece = this.state.board[departament].workers[fromRow].days[fromCol];\n        // const piece = this.state.board[departament].workers[rowIndex].days[colIndex];\n\n        // if (fromPiece === piece) return true;\n        // if (fromPiece.side === piece.side) return false;\n\n        return true;\n    }\n\n    onDrop(dropResult, departament, rowIndex, cellWidth) {\n        const { addedIndex, removedIndex, payload } = dropResult;\n        const obj = Object.assign({}, payload);\nconsole.log(cellWidth)\n        obj.left = Math.round(this.state.x / cellWidth) * cellWidth\n        // console.log('onDrop',this.state.x, obj.left)\n\n        if (addedIndex !== null || removedIndex !== null) {\n\n\n            if (removedIndex !== null) {\n\n                this.state.board[departament].workers[rowIndex].projects.splice(removedIndex, 1)\n            }\n\n            if (addedIndex !== null) {\n\n                this.state.board[departament].workers[rowIndex].projects.push(obj);\n            }\n\n            this.setState({ startDrag: false });\n            // this.forceUpdate();\n        }\n    }\n\n    handleMouseMove(event) {\n        if (this.state.startDrag) {\n            this.setState({\n                x: event.nativeEvent.x - this.state.dayOffsetLeft\n            });\n        }\n    }\n\n    onDragStart(result, departament, row) {\n        // this.state.board[departament].workers[row].days[col].hover = true;\n        // console.log(result, departament, row)\n\n        this.setState({ startDrag: true });\n        // this.forceUpdate();\n    }\n    onDragEnter(departament, row, col) {\n        // this.state.board[departament].workers[row].days[col].hover = true;\n        // this.forceUpdate();\n    }\n    onDragEnd(departament, row, col) {\n        // this.state.board[departament].workers[row].days[col].hover = true;\n        // this.forceUpdate();\n\n        // console.log('onDragEnd',this.state.x)\n\n    }\n    onDropReady(dropResult) {\n        // const { removedIndex, addedIndex, payload, element } = dropResult;\n    }\n    onDragLeave(departament, row, col) {\n        // console.log(departament, row)\n        // this.state.board[departament].workers[row].days[col].hover = false;\n        // this.forceUpdate();\n    }\n}\n\n\nAbsoluteSmooth.propTypes = {};\nAbsoluteSmooth.defaultProps = {\n    // cellWidth: 140,\n};\n\nexport default (AbsoluteSmooth);\n","import React from 'react'\nimport AbsoluteSmooth from './AbsoluteSmooth'\n\nexport default function CalculateData({ daysInRow, rowWidth }) {\n    const cellWidth = rowWidth / daysInRow.length\n    const board = [\n        {\n            departamentName: \"BACKEND\", show: true, workers: [\n                {\n                    id: 'back-1', name: 'Leonid', surname: 'Bondar', department: 'back', projects: [\n                        { left: 0, positionY: 1, id: \"back-1-1\", title: \"Startup\", projStart: \"Aug 15 2020\", duration: 2, type: 'main' }\n                    ]\n                },\n                {\n                    id: 'back-2', name: 'Boris', surname: 'Koval', department: 'back', projects: []\n                },\n                {\n                    id: 'back-3', name: 'Afanasy', surname: 'Marchenko', department: 'back', projects: []\n                },\n                {\n                    id: 'back-4', name: 'Artur', surname: 'Rudenko', department: 'back', projects: [\n                        { left: 240, positionY: 1, id: \"back-4-1\", title: \"Manifest\", projStart: \"Aug 19 2020\", duration: 4, type: \"education\" }\n                    ]\n                },\n                {\n                    id: 'back-5', name: 'Mikhail', surname: 'Petrenko', department: 'back', projects: []\n                }\n            ]\n        },\n        {\n            departamentName: \"QA\", show: true, workers: [\n                {\n                    id: 'qa-1', name: 'Leonid', surname: 'Bondar', department: 'qa', projects: [\n                        { left: 120, positionY: 1, id: \"qa-1-1\", title: \"Startup 1\", projStart: \"Aug 15 2020\", duration: 2, type: 'main' },\n                        { left: 131 * 4, positionY: 1, id: \"qa-1-2\", title: \"Startup 2\", projStart: \"Aug 15 2020\", duration: 2, type: 'main' },\n                    ]\n                },\n                {\n                    id: 'qa-2', name: 'Boris', surname: 'Koval', department: 'qa', projects: []\n                },\n                {\n                    id: 'qa-3', name: 'Afanasy', surname: 'Marchenko', department: 'qa', projects: []\n                },\n                {\n                    id: 'qa-4', name: 'Artur', surname: 'Rudenko', department: 'qa', projects: []\n                }\n            ]\n        }\n    ]\n\n\n\n    return (\n\n        <AbsoluteSmooth days={daysInRow} cellWidth={cellWidth} board={board} />\n    )\n}\n","import React, { Component } from 'react'\nimport DatePickerHeader from './DatePickerHeader/DatePickerHeader'\n// import Table from './Table/Table';\nimport AbsoluteSmooth from './AbsoluteSmooth/AbsoluteSmooth';\nimport Lines from './AbsoluteSmooth/Lines';\nimport CalculateData from './AbsoluteSmooth/CalculateData';\n// import Test from './Table/Test';\n// import Grid from './Grid/Grid'\n\n\n\n\nexport default class System extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            daysInRow: [],\n            rowWidth: null,\n        }\n\n    }\n\n\n    getDaysInRow = (daysInRow) => {\n        this.setState({ daysInRow });\n    }\n\n    getRowWidth = (rowWidth) => {\n        this.setState({ rowWidth });\n    }\n\n\n\n    render() {\n\n\n        return (\n            <>\n                <div className=\"System container-fluid\">\n                    <DatePickerHeader getDaysInRow={this.getDaysInRow} getRowWidth={this.getRowWidth} />\n\n                    {/* <div ref={this.ref} className='drag'> Resize me!  </div> */}\n\n                    {/* <Table days={this.state.daysInRow} /> */}\n                    <div className=\"AbsoluteSmooth\"  >\n\n                        <CalculateData daysInRow={this.state.daysInRow} rowWidth={this.state.rowWidth} />\n\n\n                        {this.state.daysInRow.map((v, i) => <Lines index={i} cellWidth={this.state.rowWidth / this.state.daysInRow.length} />)}\n                        <Lines index={-1} cellWidth={this.state.rowWidth / this.state.daysInRow.length} />\n                    </div>\n\n                    {/* <Test days={this.state.daysInRow} /> */}\n                    {/* <ChessApp /> */}\n                    {/* <Grid /> */}\n\n                </div>\n\n            </>\n        )\n    }\n}\n\n","import React from 'react';\nimport './App.scss';\n// import Join from './components/Join/Join';\nimport System from './components/System/System';\n// import { BrowserRouter as Router, Route } from 'react-router-dom'\n\n\nfunction App() {\n  return (\n    <>\n      <System />\n    </>\n  );\n}\n\nexport default App;\n\n // <Router>\n    //   <Route path=\"/\" exact component={Join} />\n    //   <Route path=\"/system\" component={System} />\n    // </Router>","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/buttonLeft.e5208634.svg\";","module.exports = __webpack_public_path__ + \"static/media/buttonRight.fb0a3ebd.svg\";"],"sourceRoot":""}